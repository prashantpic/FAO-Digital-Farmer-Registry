# Staging Environment Specifics
# Copy this file to ".env.staging" (or as per your CI/CD pipeline's expectation)
# and fill in the SECURE values. These values should be managed via a secure
# mechanism (e.g., CI/CD variables, secrets manager) and NOT committed to Git if filled.

# PostgreSQL Credentials & Database Configuration
DFR_DB_HOST=postgres_staging_host # Or the service name if internal to Docker Compose on staging infra
DFR_DB_PORT={{STAGING_DB_PORT | default(5432)}}
DFR_DB_USER={{STAGING_DB_USER}}
DFR_DB_PASSWORD={{STAGING_DB_PASSWORD}} # Use a strong, unique password
DFR_DB_NAME={{STAGING_DB_NAME}}
# DFR_DB_EXTERNAL_PORT= # Typically not directly exposed in staging

# Odoo Configuration
ODOO_MASTER_PASSWORD={{STAGING_ODOO_MASTER_PASSWORD}} # Use a strong, unique password
ODOO_LOAD_DEMO_DATA=false # Should always be false for staging
ODOO_WORKERS={{STAGING_ODOO_WORKERS | default(2)}} # Adjust based on staging server resources
ODOO_LOG_LEVEL={{STAGING_ODOO_LOG_LEVEL | default("info")}}
ODOO_LIST_DB=False # Critical: Set to False for staging and production
# ODOO_APP_EXTERNAL_PORT= # Not directly exposed, access via Nginx
# ODOO_LONGPOLLING_EXTERNAL_PORT= # Not directly exposed

# Nginx Configuration
# NGINX_HTTP_PORT= # Managed by infrastructure (e.g., cloud load balancer listens on 80)
# NGINX_HTTPS_PORT= # Managed by infrastructure (e.g., cloud load balancer listens on 443)
NGINX_SERVER_NAME={{STAGING_NGINX_SERVER_NAME}} # e.g., staging.dfr.yourdomain.country
SSL_CERTIFICATE_FILE={{STAGING_SSL_CERT_FILE_NAME}} # e.g., staging.dfr.yourdomain.country.crt
SSL_CERTIFICATE_KEY_FILE={{STAGING_SSL_KEY_FILE_NAME}} # e.g., staging.dfr.yourdomain.country.key
# NGINX_PROXY_READ_TIMEOUT={{STAGING_NGINX_PROXY_READ_TIMEOUT | default(720s)}}
# NGINX_CLIENT_MAX_BODY_SIZE={{STAGING_NGINX_CLIENT_MAX_BODY_SIZE | default(100m)}}

# Image Tags (should be specific versions from your Docker registry)
ODOO_IMAGE_NAME={{STAGING_ODOO_IMAGE_NAME | default("your-registry/dfr_odoo_app")}}
ODOO_IMAGE_TAG={{STAGING_ODOO_IMAGE_TAG}} # e.g., v1.2.3 or git-commit-sha

POSTGRES_IMAGE_NAME={{STAGING_POSTGRES_IMAGE_NAME | default("dfr_postgres_db")}} # Or official postgres
POSTGRES_IMAGE_TAG={{STAGING_POSTGRES_IMAGE_TAG | default("16-alpine")}} # Or specific custom build tag

NGINX_IMAGE_NAME={{STAGING_NGINX_IMAGE_NAME | default("your-registry/dfr_nginx_proxy")}}
NGINX_IMAGE_TAG={{STAGING_NGINX_IMAGE_TAG}} # e.g., v1.1.0 or git-commit-sha

# Backup Configuration Variables (if sourced by .env for backup script context)
# ENV=staging # This should be set in the execution environment of backup/restore scripts

# Other staging-specific settings
# For example, API keys for third-party services (staging accounts)
# THIRD_PARTY_API_KEY_STAGING={{STAGING_THIRD_PARTY_API_KEY}}