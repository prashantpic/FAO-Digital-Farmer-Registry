[defaults]
# --- General settings ---
# Path to the inventory file or directory.
inventory          = ./inventories/

# Default remote user to connect as. Can be overridden by inventory or command line.
remote_user        = ubuntu

# Path to the SSH private key file to use for connections.
# Ensure this key is properly permissioned (e.g., chmod 600).
# It's often better to use ssh-agent or specify via command line/inventory if keys vary.
private_key_file   = ~/.ssh/dfr_key

# Colon-separated list of paths to search for roles.
roles_path         = ./roles

# File to log Ansible output to.
log_path           = ./ansible.log

# Number of parallel processes to use.
forks              = 5

# Set to True in production or secure environments to verify host keys.
# Set to False for initial development/testing in trusted networks.
host_key_checking  = False

# Suppressible warnings
# To hide general deprecation warnings.
deprecation_warnings = False
# To hide warnings about using bare variables in loops (jinja2_native can help if applicable)
# loop_var_warnings = False

# Timeout for connections in seconds.
timeout = 10

# Default module to use for commands if none is specified.
# module_name = command # Default is command

# Default module arguments.
# module_args =

# --- SSH settings ---
[ssh_connection]
# SSH arguments to pass to ssh.
# Example: ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o PreferredAuthentications=publickey
ssh_args = -o ControlMaster=auto -o ControlPersist=30m -o ConnectionAttempts=3

# Pipelining reduces the number of SSH operations required to execute a module on the remote server.
# This can result in a significant performance improvement when enabled.
# Requires `requiretty` to be disabled in /etc/sudoers on managed hosts.
pipelining = True

# ControlPath directory for SSH persistent connections.
# control_path_dir = ~/.ansible/cp

# --- Privilege Escalation settings ---
[privilege_escalation]
# Whether to use privilege escalation (e.g., sudo, su).
become            = True

# Method of privilege escalation (e.g., sudo, su, pbrun, doas).
become_method     = sudo

# User to escalate to.
become_user       = root

# Whether to prompt for the privilege escalation password.
# Set to False if sudo is configured for NOPASSWD for the remote_user.
# If True, Ansible will prompt interactively, or you can use --ask-become-pass.
become_ask_pass   = False

# --- Colors ---
[colors]
# Whether to use colors in output.
# nocolor = 0 # Default is to use color

# --- Diff settings ---
# Show a diff when files change.
# diff = True # Default is True
# diff_context = 3 # Number of lines of context in diffs

# --- Retries ---
# Number of retries for failed tasks.
# retries = 0 # Default is 0, no retries. Requires ansible-runner or AWX/Tower.
# For standard ansible-playbook, retry logic is often handled within tasks/roles or with `until` loops.

# --- Vault ---
# Specify a vault password file for automatically decrypting vaulted variables.
# vault_password_file = /path/to/your/vault_password_file
# Or, use --vault-id or --ask-vault-pass

# --- Callback Plugins ---
# Configure callback plugins for output formatting.
# stdout_callback = yaml # Other options: default, minimal, dense, tree, etc.
# bin_ansible_callbacks = True # Enable callbacks for ad-hoc commands

# --- Collection Paths ---
# collections_paths = ~/.ansible/collections:/usr/share/ansible/collections

# --- Interpreter Discovery ---
# Python interpreter for managed nodes.
# ansible_python_interpreter=/usr/bin/python3 # Can also be set in inventory.
# interpreter_python = auto_silent # Or auto_legacy_silent to prefer python2 if python3 not found